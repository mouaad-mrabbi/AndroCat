generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

//User
model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  username String @unique @db.VarChar(30)
  password String

  phoneNumber String? @unique
  country     String?
  profile     String  @default("/images/default-profile.png")

  role Role @default(USER)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  lastLogin DateTime?

  isVerified        Boolean @default(false)
  verificationToken String? @unique

  resetPasswordToken   String?   @unique
  resetPasswordExpires DateTime?

  // Relations
  createdArticles   Article[] @relation(name: "CreatedBy")
  validatedArticles Article[] @relation(name: "ValidatedBy")

  pendingArticles PendingArticle[]

  rejectedPendingArticles RejectedPendingArticle[] @relation("RejectedBy")
}

enum Role {
  USER // Regular user
  ADMIN // Admin with limited control
  SUPER_ADMIN // Higher-level admin
  OWNER // System owner with full control
}

//article
enum ArticleType {
  GAME
  PROGRAM
}

enum GameCategories {
  ACTION
  CARDS
  ARCADE
  RPG
  SHOOTER
  CASUAL
  STRATEGY
  SPORT
  SIMULATIONS
  RACE
  DESKTOP
  LOGICAL
  QUESTS
  ADVENTURE
  MUSIC
  ROLE_PLAYING
  PUZZLE
}

enum ProgramCategories {
  BUSINESS_FINANCE
  HEALTH_SPORT
  INTERNET
  SOCIAL
  MUSIC_VIDEO
  PERSONALIZATION
  EDUCATION
  OFFICE
  WEATHER
  TRAVEL
  CAMERA
  PHOTOGRAPHY
  FILE_MANAGERS
  TRANSLATORS
  LINK
  TOOLS
}

enum ScreenType {
  SIXTEEN_BY_NINE
  NINE_BY_SIXTEEN
  THREE_BY_FOUR
  FIVE_BY_EIGHT
}

model Article {
  id              Int     @id @default(autoincrement())
  title           String
  secondTitle     String?
  description     String
  descriptionMeta String
  image           String
  developer       String
  version         String
  versionOriginal String?
  androidVer      String

  articleType     ArticleType
  gameCategory    GameCategories?
  programCategory ProgramCategories?

  OBB         Boolean @default(false)
  Script      Boolean @default(false)
  OriginalAPK Boolean @default(false)

  linkAPK         String
  linkOBB         String?
  linkVideo       String?
  linkScript      String?
  linkOriginalAPK String?

  sizeFileAPK         String
  sizeFileOBB         String?
  sizeFileScript      String?
  sizeFileOriginalAPK String?

  screenType ScreenType @default(SIXTEEN_BY_NINE)
  appScreens String[]

  keywords String[]
  isMod    Boolean  @default(false)
  typeMod  String?

  ratedFor Int
  installs String

  ratingCount   Int   @default(0)
  averageRating Float @default(0.0)

  views         Int? @default(0)
  downloadCount Int? @default(0)

  isApproved Boolean @default(false)

  createdById   Int
  validatedById Int

  createdAt   DateTime
  updatedAt   DateTime @updatedAt
  validatedAt DateTime @default(now())

  createdBy   User @relation(name: "CreatedBy", fields: [createdById], references: [id])
  validatedBy User @relation(name: "ValidatedBy", fields: [validatedById], references: [id])

  pendingArticle PendingArticle?
  ratings        ArticleRating[]
  paragraphs     ArticleParagraph[]
  apks           ArticleAPKS[]
  apkxs          ArticleAPKXS[]
}

model ArticleRating {
  id        Int    @id @default(autoincrement())
  ipAddress String
  rate      Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  articleId Int
  article   Article @relation(fields: [articleId], references: [id], onDelete: Cascade)

  @@unique([articleId, ipAddress]) // منع نفس الـ IP من تقييم نفس العنصر أكثر من مرة
  @@index([articleId]) // فهرس لتحسين الأداء
}

//Pending article
enum ActionType {
  CREATE
  UPDATE
  DELETE
}

model PendingArticle {
  id       Int        @id @default(autoincrement())
  status   ActionType
  checking Boolean    @default(false)

  title           String
  secondTitle     String?
  description     String
  descriptionMeta String
  image           String
  developer       String
  version         String
  versionOriginal String?
  androidVer      String

  articleType     ArticleType
  gameCategory    GameCategories?
  programCategory ProgramCategories?

  OBB         Boolean @default(false)
  Script      Boolean @default(false)
  OriginalAPK Boolean @default(false)

  linkAPK         String
  linkOBB         String?
  linkVideo       String?
  linkScript      String?
  linkOriginalAPK String?

  sizeFileAPK         String
  sizeFileOBB         String?
  sizeFileScript      String?
  sizeFileOriginalAPK String?

  screenType ScreenType @default(SIXTEEN_BY_NINE)
  appScreens String[]

  keywords String[]
  isMod    Boolean  @default(false)
  typeMod  String?

  ratedFor Int
  installs String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  createdById Int
  createdBy   User @relation(fields: [createdById], references: [id])

  articleId Int?     @unique
  article   Article? @relation(fields: [articleId], references: [id], onDelete: Cascade)

  rejected   RejectedPendingArticle?
  paragraphs PendingArticleParagraph[]
  apks       PendingArticleAPKS[]
  apkxs      PendingArticleAPKXS[]
}

model RejectedPendingArticle {
  id Int @id @default(autoincrement())

  pendingArticleId Int            @unique
  pendingArticle   PendingArticle @relation(fields: [pendingArticleId], references: [id], onDelete: Cascade)

  rejectedAt   DateTime @default(now())
  rejectedById Int
  rejectedBy   User     @relation("RejectedBy", fields: [rejectedById], references: [id])

  reason String
}

// Paragraph

model ArticleParagraph {
  id        Int     @id @default(autoincrement())
  article   Article @relation(fields: [articleId], references: [id], onDelete: Cascade)
  articleId Int

  title   String?
  content String
  order   Int
}

model PendingArticleParagraph {
  id               Int            @id @default(autoincrement())
  pendingArticle   PendingArticle @relation(fields: [pendingArticleId], references: [id], onDelete: Cascade)
  pendingArticleId Int

  title   String?
  content String
  order   Int
}

// apks
model ArticleAPKS {
  id        Int     @id @default(autoincrement())
  article   Article @relation(fields: [articleId], references: [id], onDelete: Cascade)
  articleId Int

  version String
  link    String
  size    String
  isMod    Boolean  @default(false)
  order   Int
}

model PendingArticleAPKS {
  id               Int            @id @default(autoincrement())
  pendingArticle   PendingArticle @relation(fields: [pendingArticleId], references: [id], onDelete: Cascade)
  pendingArticleId Int

  version String
  link    String
  size    String
  isMod    Boolean  @default(false)
  order   Int
}

//apkxs
model ArticleAPKXS {
  id        Int     @id @default(autoincrement())
  article   Article @relation(fields: [articleId], references: [id], onDelete: Cascade)
  articleId Int

  version String
  link    String
  size    String
  isMod    Boolean  @default(false)
  order   Int
}

model PendingArticleAPKXS {
  id               Int            @id @default(autoincrement())
  pendingArticle   PendingArticle @relation(fields: [pendingArticleId], references: [id], onDelete: Cascade)
  pendingArticleId Int

  version String
  link    String
  size    String
  isMod    Boolean  @default(false)
  order   Int
}